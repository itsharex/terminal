// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FoldersColumns holds the columns for the "folders" table.
	FoldersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// FoldersTable holds the schema information for the "folders" table.
	FoldersTable = &schema.Table{
		Name:       "folders",
		Columns:    FoldersColumns,
		PrimaryKey: []*schema.Column{FoldersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "folders_folders_children",
				Columns:    []*schema.Column{FoldersColumns[2]},
				RefColumns: []*schema.Column{FoldersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HostsColumns holds the columns for the "hosts" table.
	HostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "port", Type: field.TypeUint, Default: 22},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "folder_id", Type: field.TypeInt, Nullable: true},
		{Name: "key_id", Type: field.TypeInt, Nullable: true},
	}
	// HostsTable holds the schema information for the "hosts" table.
	HostsTable = &schema.Table{
		Name:       "hosts",
		Columns:    HostsColumns,
		PrimaryKey: []*schema.Column{HostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hosts_folders_host",
				Columns:    []*schema.Column{HostsColumns[6]},
				RefColumns: []*schema.Column{FoldersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "hosts_keys_host",
				Columns:    []*schema.Column{HostsColumns[7]},
				RefColumns: []*schema.Column{KeysColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hosts_label_address",
				Unique:  true,
				Columns: []*schema.Column{HostsColumns[1], HostsColumns[3]},
			},
		},
	}
	// KeysColumns holds the columns for the "keys" table.
	KeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "content", Type: field.TypeBytes},
	}
	// KeysTable holds the schema information for the "keys" table.
	KeysTable = &schema.Table{
		Name:       "keys",
		Columns:    KeysColumns,
		PrimaryKey: []*schema.Column{KeysColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FoldersTable,
		HostsTable,
		KeysTable,
	}
)

func init() {
	FoldersTable.ForeignKeys[0].RefTable = FoldersTable
	FoldersTable.Annotation = &entsql.Annotation{
		Table: "folders",
	}
	HostsTable.ForeignKeys[0].RefTable = FoldersTable
	HostsTable.ForeignKeys[1].RefTable = KeysTable
	HostsTable.Annotation = &entsql.Annotation{
		Table: "hosts",
	}
	KeysTable.Annotation = &entsql.Annotation{
		Table: "keys",
	}
}
